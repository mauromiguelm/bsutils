% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/offcanvas.R
\name{offcanvas}
\alias{offcanvas}
\alias{offcanvas.offcanvasTrigger}
\alias{offcanvas.shiny.tag}
\title{Offcanvas}
\usage{
offcanvas(trigger, content)

\method{offcanvas}{offcanvasTrigger}(trigger, content)

\method{offcanvas}{shiny.tag}(trigger, content)
}
\arguments{
\item{trigger}{A \code{\link[=collapseButton]{collapseButton()}}, \code{\link[=collapseLink]{collapseLink()}},
\code{\link[shiny:actionButton]{shiny::actionButton()}}, \code{\link[shiny:actionButton]{shiny::actionLink()}}.}

\item{content}{The offcanvas content as returned by
\code{\link[=offcanvasContent]{offcanvasContent()}}.}
}
\description{
Create an offcanvas element.
}
\section{Methods (by class)}{
\itemize{
\item \code{offcanvas(offcanvasTrigger)}: Offcanvas wrapper for \code{\link[=collapseButton]{collapseButton()}}, \code{\link[=collapseLink]{collapseLink()}}.

\item \code{offcanvas(shiny.tag)}: Offcanvas wrapper for \code{\link[shiny:actionButton]{shiny::actionButton()}}, \code{\link[shiny:actionButton]{shiny::actionLink()}}.

}}
\examples{
library(shiny)

ui <- fluidPage(
  theme = bslib::bs_theme(version = 5L),
  offcanvas(
    offcanvasButton(
      "Open"
    ),
    offcanvasContent(
      offcanvasHeader(
        "Off canvas"
      ),
      p(
        "Hello world"
      )
    )
  )
)

server <- \(input, output, session){

}

if(interactive())
 shinyApp(ui, server)

}
